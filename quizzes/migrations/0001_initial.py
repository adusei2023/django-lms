# Generated by Django 4.2.7 on 2025-07-05 17:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('is_correct', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay')], default='multiple_choice', max_length=20)),
                ('text', models.TextField(help_text='The question text')),
                ('explanation', models.TextField(blank=True, help_text='Explanation shown after answering')),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('points', models.PositiveIntegerField(default=1)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('quiz_type', models.CharField(choices=[('practice', 'Practice Quiz'), ('graded', 'Graded Assessment'), ('final', 'Final Exam')], default='practice', max_length=20)),
                ('time_limit_minutes', models.PositiveIntegerField(blank=True, help_text='Time limit in minutes (leave blank for no limit)', null=True)),
                ('max_attempts', models.PositiveIntegerField(default=3, help_text='Maximum number of attempts allowed')),
                ('pass_percentage', models.DecimalField(decimal_places=2, default=70.0, help_text='Minimum percentage to pass', max_digits=5)),
                ('show_correct_answers', models.BooleanField(default=True, help_text='Show correct answers after completion')),
                ('show_explanations', models.BooleanField(default=True, help_text='Show explanations for answers')),
                ('randomize_questions', models.BooleanField(default=False, help_text='Randomize question order')),
                ('randomize_answers', models.BooleanField(default=False, help_text='Randomize answer choices')),
                ('is_published', models.BooleanField(default=False)),
                ('available_from', models.DateTimeField(blank=True, null=True)),
                ('available_until', models.DateTimeField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('timed_out', 'Timed Out'), ('abandoned', 'Abandoned')], default='in_progress', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('max_score', models.PositiveIntegerField(blank=True, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general_feedback', models.TextField(help_text='General feedback on the attempt')),
                ('strengths', models.TextField(blank=True, help_text='What the student did well')),
                ('areas_for_improvement', models.TextField(blank=True, help_text='Areas where student can improve')),
                ('recommended_resources', models.TextField(blank=True, help_text='Suggested additional resources')),
                ('next_steps', models.TextField(blank=True, help_text='Suggested next steps for learning')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, help_text='For text/essay questions')),
                ('is_auto_graded', models.BooleanField(default=True)),
                ('points_earned', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('instructor_feedback', models.TextField(blank=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='quizzes.quizattempt')),
            ],
        ),
    ]
